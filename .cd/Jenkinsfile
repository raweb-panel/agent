pipeline {
  agent {
    dockerContainer {
      image 'theraw/jenkinsgo:1.23.10'
    }
  }

  environment {
    GITHUB_TOKEN = credentials('github-token')
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
        sh 'git fetch --tags'
      }
    }

    stage('Bump Version') {
      steps {
        script {
          // Get latest tag or fallback to v1.0.0
          def latestTag = sh(returnStdout: true, script: """
            git tag --sort=version:refname | tail -n1
          """).trim()
          if (!latestTag) {
            latestTag = "v1.0.0"
          }
          echo "Latest tag: ${latestTag}"

          // Increment patch version
          def parts = latestTag.replaceFirst('^v','').split('\\.')
          def nextTag = "v${parts[0]}.${parts[1]}.${(parts[2].toInteger()+1)}"
          echo "Next tag: ${nextTag}"
          env.NEXT_TAG = nextTag
        }
      }
    }

    stage('Build') {
      steps {
        sh 'go build -o agent run.go'
        sh 'tar -czf agent.tar.gz agent config.json'
      }
    }

    stage('Tag & Push') {
      steps {
        sh """
          git config user.name "jenkins"
          git config user.email "cd@julio.al"
          git remote set-url origin https://${GITHUB_TOKEN}@github.com/raweb-panel/agent.git
          git tag ${env.NEXT_TAG}
          git push origin ${env.NEXT_TAG}
        """
      }
    }

    stage('Release to GitHub') {
      steps {
        sh """
          curl -fsSL https://github.com/cli/cli/releases/download/v2.74.2/gh_2.74.2_linux_amd64.tar.gz -o /tmp/gh.tar.gz
          tar -xzf /tmp/gh.tar.gz -C /tmp
          cp /tmp/gh_2.74.2_linux_amd64/bin/gh /usr/local/bin/
          export GITHUB_TOKEN="${GITHUB_TOKEN}"
          gh --version
          gh release create ${env.NEXT_TAG} agent.tar.gz \
            --repo raweb-panel/agent \
            --title "${env.NEXT_TAG}" \
            --notes "Automated release ${env.NEXT_TAG}"
        """
      }
    }
  }
}

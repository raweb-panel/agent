pipeline {
  agent {
    dockerContainer {
      image 'theraw/jenkinsgo:1.23.10'
    }
  }

  environment {
    GITHUB_TOKEN = credentials('github-token')
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
        sh 'git fetch --tags'
      }
    }

    stage('Bump Version') {
      steps {
        script {
          // Get latest tag or fallback to v1.0.0
          def latestTag = sh(returnStdout: true, script: """
            git tag --sort=version:refname | tail -n1
          """).trim()
          if (!latestTag) {
            latestTag = "v1.0.0"
          }
          echo "Latest tag: ${latestTag}"

          // Increment patch version
          def parts = latestTag.replaceFirst('^v','').split('\\.')
          def nextTag = "v${parts[0]}.${parts[1]}.${(parts[2].toInteger()+1)}"
          echo "Next tag: ${nextTag}"
          env.NEXT_TAG = nextTag
        }
      }
    }

    stage('Build') {
      steps {
        sh 'go build -o agent run.go'
        sh 'tar -czf agent.tar.gz agent config.json'
      }
    }

    stage('Tag & Push') {
      steps {
        sh '''
        git config user.name "jenkins"
        git config user.email "cd@julio.al"
        git remote set-url origin https://$GITHUB_TOKEN@github.com/raweb-panel/agent.git
        git tag $NEXT_TAG
        git push origin $NEXT_TAG
        '''
      }
    }

    stage('Release to GitHub') {
      steps {
        sh '''
        gh release create $NEXT_TAG agent.tar.gz \
            --repo raweb-panel/agent \
            --title "$NEXT_TAG" \
            --notes "Automated release $NEXT_TAG"
        '''
      }
    }
  }
}
